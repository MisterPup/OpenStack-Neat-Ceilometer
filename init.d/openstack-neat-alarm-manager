#!/bin/sh
#
# openstack-neat-alarm-manager  OpenStack Neat Alarm Manager
#
# chkconfig:   - 99 01
# description: The alarm manager provides integration between \
#              ceilometer and neat

### BEGIN INIT INFO
# Provides: openstack_neat_alarm_manager
# Required-Start: $remote_fs $network $syslog
# Required-Stop: $remote_fs $network $syslog
# Short-Description: OpenStack Neat Alarm Manager
# Description: The alarm manager provides integration between 
#              celometer and neat    
### END INIT INFO

#. /etc/rc.d/init.d/functions
. /lib/lsb/init-functions

PYTHONPATH=/usr/lib/python2.7/site-packages
export PYTHONPATH

suffix=alarm-manager
prog=openstack-neat-$suffix
exec="/usr/bin/neat-$suffix"
piddir="/var/run/neat"
pidfile="$piddir/neat-$suffix.pid"
logdir="/var/log/neat"
logfile="$logdir/alarm-manager-service.log"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

#lockfile=/var/lock/subsys/$prog
lockdir="/var/lock/subsys"
lockfile="$lockdir/$prog"

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    mkdir -p $piddir
    mkdir -p $logdir
    mkdir -p $lockdir
    start-stop-daemon --start --quiet --chuid root --make-pidfile --pidfile $pidfile --background --startas /bin/bash -- -c "exec $exec > $logfile 2>&1"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile && rm -f $pidfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    status -p $pidfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *) 
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
